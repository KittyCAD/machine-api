{
  "components": {
    "responses": {
      "Error": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        },
        "description": "Error"
      }
    },
    "schemas": {
      "Error": {
        "description": "Error information from a response.",
        "properties": {
          "error_code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "request_id": {
            "type": "string"
          }
        },
        "required": [
          "message",
          "request_id"
        ],
        "type": "object"
      },
      "ExtraMachineInfoResponse": {
        "description": "Extra machine-specific information regarding a connected machine.",
        "oneOf": [
          {
            "additionalProperties": false,
            "properties": {
              "Moonraker": {
                "type": "object"
              }
            },
            "required": [
              "Moonraker"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "Usb": {
                "type": "object"
              }
            },
            "required": [
              "Usb"
            ],
            "type": "object"
          },
          {
            "additionalProperties": false,
            "properties": {
              "Bambu": {
                "properties": {
                  "current_stage": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Stage"
                      }
                    ],
                    "description": "The current stage of the machine as defined by Bambu which can include errors, etc.",
                    "nullable": true
                  },
                  "raw_status": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/PushStatus"
                      }
                    ],
                    "description": "The raw status message from the machine."
                  }
                },
                "required": [
                  "raw_status"
                ],
                "type": "object"
              }
            },
            "required": [
              "Bambu"
            ],
            "type": "object"
          }
        ]
      },
      "GcodeState": {
        "description": "The gcode state.",
        "oneOf": [
          {
            "description": "The gcode is idle.",
            "enum": [
              "IDLE"
            ],
            "type": "string"
          },
          {
            "description": "The gcode is running.",
            "enum": [
              "RUNNING"
            ],
            "type": "string"
          },
          {
            "description": "The gcode is paused.",
            "enum": [
              "PAUSE"
            ],
            "type": "string"
          },
          {
            "description": "The gcode is finished.",
            "enum": [
              "FINISH"
            ],
            "type": "string"
          },
          {
            "description": "The gcode is failed.",
            "enum": [
              "FAILED"
            ],
            "type": "string"
          }
        ]
      },
      "LedMode": {
        "description": "The mode for the led.",
        "oneOf": [
          {
            "description": "Turn the LED on.",
            "enum": [
              "on"
            ],
            "type": "string"
          },
          {
            "description": "Turn the LED off.",
            "enum": [
              "off"
            ],
            "type": "string"
          },
          {
            "description": "Flash the LED.",
            "enum": [
              "flashing"
            ],
            "type": "string"
          }
        ]
      },
      "LedNode": {
        "description": "The node for the led.",
        "oneOf": [
          {
            "description": "The chamber light.",
            "enum": [
              "chamber_light"
            ],
            "type": "string"
          },
          {
            "description": "The work light.",
            "enum": [
              "work_light"
            ],
            "type": "string"
          }
        ]
      },
      "MachineInfoResponse": {
        "description": "Information regarding a connected machine.",
        "properties": {
          "extra": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExtraMachineInfoResponse"
              }
            ],
            "description": "Additional, per-machine information which is specific to the underlying machine type.",
            "nullable": true
          },
          "id": {
            "description": "Machine Identifier (ID) for the specific Machine.",
            "type": "string"
          },
          "machine_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineType"
              }
            ],
            "description": "Information regarding the method of manufacture."
          },
          "make_model": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineMakeModel"
              }
            ],
            "description": "Information regarding the make and model of the attached Machine."
          },
          "max_part_volume": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Volume"
              }
            ],
            "description": "Maximum part size that can be manufactured by this device. This may be some sort of theoretical upper bound, getting close to this limit seems like maybe a bad idea.\n\nThis may be `None` if the maximum size is not knowable by the Machine API.\n\nWhat \"close\" means is up to you!",
            "nullable": true
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MachineState"
              }
            ],
            "description": "Status of the printer -- be it printing, idle, or unreachable. This may dictate if a machine is capable of taking a new job."
          }
        },
        "required": [
          "id",
          "machine_type",
          "make_model",
          "state"
        ],
        "type": "object"
      },
      "MachineMakeModel": {
        "description": "Information regarding the make/model of a discovered endpoint.",
        "properties": {
          "manufacturer": {
            "description": "The manufacturer that built the connected Machine.",
            "nullable": true,
            "type": "string"
          },
          "model": {
            "description": "The model of the connected Machine.",
            "nullable": true,
            "type": "string"
          },
          "serial": {
            "description": "The unique serial number of the connected Machine.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "MachineState": {
        "description": "Current state of the machine -- be it printing, idle or offline. This can be used to determine if a printer is in the correct state to take a new job.",
        "oneOf": [
          {
            "description": "If a print state can not be resolved at this time, an Unknown may be returned.",
            "enum": [
              "Unknown"
            ],
            "type": "string"
          },
          {
            "description": "Idle, and ready for another job.",
            "enum": [
              "Idle"
            ],
            "type": "string"
          },
          {
            "description": "Running a job -- 3D printing or CNC-ing a part.",
            "enum": [
              "Running"
            ],
            "type": "string"
          },
          {
            "description": "Machine is currently offline or unreachable.",
            "enum": [
              "Offline"
            ],
            "type": "string"
          },
          {
            "description": "Job is underway but halted, waiting for some action to take place.",
            "enum": [
              "Paused"
            ],
            "type": "string"
          },
          {
            "description": "Job is finished, but waiting manual action to move back to Idle.",
            "enum": [
              "Complete"
            ],
            "type": "string"
          },
          {
            "additionalProperties": false,
            "description": "The printer has failed and is in an unknown state that may require manual attention to resolve. The inner value is a human readable description of what specifically has failed.",
            "properties": {
              "Failed": {
                "nullable": true,
                "type": "string"
              }
            },
            "required": [
              "Failed"
            ],
            "type": "object"
          }
        ]
      },
      "MachineType": {
        "description": "Specific technique by which this Machine takes a design, and produces a real-world 3D object.",
        "oneOf": [
          {
            "description": "Use light to cure a resin to build up layers.",
            "enum": [
              "Stereolithography"
            ],
            "type": "string"
          },
          {
            "description": "Fused Deposition Modeling, layers of melted plastic.",
            "enum": [
              "FusedDeposition"
            ],
            "type": "string"
          },
          {
            "description": "\"Computer numerical control\" - machine that grinds away material from a hunk of material to construct a part.",
            "enum": [
              "Cnc"
            ],
            "type": "string"
          }
        ]
      },
      "NozzleType": {
        "description": "A nozzle type.",
        "oneOf": [
          {
            "description": "Hardened steel nozzle.",
            "enum": [
              "hardened_steel"
            ],
            "type": "string"
          },
          {
            "description": "Stainless steel nozzle.",
            "enum": [
              "stainless_steel"
            ],
            "type": "string"
          }
        ]
      },
      "Pong": {
        "description": "The response from the `/ping` endpoint.",
        "properties": {
          "message": {
            "description": "The pong response.",
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "PrintAms": {
        "additionalProperties": true,
        "description": "The print ams.",
        "properties": {
          "ams": {
            "description": "The ams.",
            "items": {
              "$ref": "#/components/schemas/PrintAmsData"
            },
            "nullable": true,
            "type": "array"
          },
          "ams_exist_bits": {
            "description": "The ams exist bits.",
            "nullable": true,
            "type": "string"
          },
          "insert_flag": {
            "description": "The insert flag.",
            "nullable": true,
            "type": "boolean"
          },
          "power_on_flag": {
            "description": "The power on flag.",
            "nullable": true,
            "type": "boolean"
          },
          "tray_exist_bits": {
            "description": "The tray exist bits.",
            "nullable": true,
            "type": "string"
          },
          "tray_is_bbl_bits": {
            "description": "The tray is bbl bits.",
            "nullable": true,
            "type": "string"
          },
          "tray_now": {
            "description": "The tray now.",
            "nullable": true,
            "type": "string"
          },
          "tray_pre": {
            "description": "The tray pre.",
            "nullable": true,
            "type": "string"
          },
          "tray_read_done_bits": {
            "description": "The tray read done bits.",
            "nullable": true,
            "type": "string"
          },
          "tray_reading_bits": {
            "description": "The tray reading bits.",
            "nullable": true,
            "type": "string"
          },
          "tray_tar": {
            "description": "The tray tar.",
            "nullable": true,
            "type": "string"
          },
          "version": {
            "description": "The version.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          }
        },
        "type": "object"
      },
      "PrintAmsData": {
        "additionalProperties": true,
        "description": "The print ams data.",
        "properties": {
          "humidity": {
            "description": "The humidity.",
            "type": "string"
          },
          "id": {
            "description": "The id.",
            "type": "string"
          },
          "temp": {
            "description": "The temperature.",
            "type": "string"
          },
          "tray": {
            "description": "The tray.",
            "items": {
              "$ref": "#/components/schemas/PrintTray"
            },
            "type": "array"
          }
        },
        "required": [
          "humidity",
          "id",
          "temp",
          "tray"
        ],
        "type": "object"
      },
      "PrintIpcam": {
        "additionalProperties": true,
        "description": "The print ipcam.",
        "properties": {
          "ipcam_dev": {
            "description": "The ipcam dev.",
            "nullable": true,
            "type": "string"
          },
          "ipcam_record": {
            "description": "The ipcam record.",
            "nullable": true,
            "type": "string"
          },
          "mode_bits": {
            "description": "The mode bits.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "timelapse": {
            "description": "The timelapse.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrintJobResponse": {
        "description": "The response from the `/print` endpoint.",
        "properties": {
          "job_id": {
            "description": "The job id used for this print.",
            "type": "string"
          },
          "parameters": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintParameters"
              }
            ],
            "description": "The parameters used for this print."
          }
        },
        "required": [
          "job_id",
          "parameters"
        ],
        "type": "object"
      },
      "PrintLightsReport": {
        "additionalProperties": true,
        "description": "A print lights report.",
        "properties": {
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LedMode"
              }
            ],
            "description": "The mode."
          },
          "node": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LedNode"
              }
            ],
            "description": "The node."
          }
        },
        "required": [
          "mode",
          "node"
        ],
        "type": "object"
      },
      "PrintOnline": {
        "additionalProperties": true,
        "description": "The print online.",
        "properties": {
          "ahb": {
            "description": "The ahb.",
            "type": "boolean"
          },
          "rfid": {
            "description": "The rfid.",
            "nullable": true,
            "type": "boolean"
          },
          "version": {
            "description": "The version.",
            "format": "int64",
            "type": "integer"
          }
        },
        "required": [
          "ahb",
          "version"
        ],
        "type": "object"
      },
      "PrintParameters": {
        "description": "Parameters for printing.",
        "properties": {
          "job_name": {
            "description": "The name for the job.",
            "type": "string"
          },
          "machine_id": {
            "description": "The machine id to print to.",
            "type": "string"
          }
        },
        "required": [
          "job_name",
          "machine_id"
        ],
        "type": "object"
      },
      "PrintTray": {
        "additionalProperties": true,
        "description": "The print tray.",
        "properties": {
          "bed_temp": {
            "description": "The bed temperature.",
            "nullable": true,
            "type": "string"
          },
          "bed_temp_type": {
            "description": "The bed temperature type.",
            "nullable": true,
            "type": "string"
          },
          "id": {
            "description": "The id.",
            "type": "string"
          },
          "k": {
            "description": "The tray k.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "n": {
            "description": "The tray n.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nozzle_temp_max": {
            "description": "The nozzle temperature max.",
            "nullable": true,
            "type": "string"
          },
          "nozzle_temp_min": {
            "description": "The nozzle temperature min.",
            "nullable": true,
            "type": "string"
          },
          "remain": {
            "description": "The tray remain.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "tag_uid": {
            "description": "The tag uid.",
            "nullable": true,
            "type": "string"
          },
          "tray_color": {
            "description": "The tray color.",
            "nullable": true,
            "type": "string"
          },
          "tray_diameter": {
            "description": "The tray diameter.",
            "nullable": true,
            "type": "string"
          },
          "tray_id_name": {
            "description": "The tray id name.",
            "nullable": true,
            "type": "string"
          },
          "tray_info_idx": {
            "description": "The tray info index.",
            "nullable": true,
            "type": "string"
          },
          "tray_sub_brands": {
            "description": "The tray sub brands.",
            "nullable": true,
            "type": "string"
          },
          "tray_temp": {
            "description": "The tray temperature.",
            "nullable": true,
            "type": "string"
          },
          "tray_time": {
            "description": "The tray time.",
            "nullable": true,
            "type": "string"
          },
          "tray_type": {
            "description": "The tray type.",
            "nullable": true,
            "type": "string"
          },
          "tray_uuid": {
            "description": "The tray uuid.",
            "nullable": true,
            "type": "string"
          },
          "tray_weight": {
            "description": "The tray weight.",
            "nullable": true,
            "type": "string"
          },
          "xcam_info": {
            "description": "The xcam info.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "id"
        ],
        "type": "object"
      },
      "PrintUpgradeState": {
        "additionalProperties": true,
        "description": "A print upgrade state.",
        "properties": {
          "consistency_request": {
            "description": "The consistency request.",
            "nullable": true,
            "type": "boolean"
          },
          "dis_state": {
            "description": "The dis state.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "err_code": {
            "description": "The error code.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "force_upgrade": {
            "description": "Force upgrade?",
            "nullable": true,
            "type": "boolean"
          },
          "message": {
            "description": "The message.",
            "nullable": true,
            "type": "string"
          },
          "module": {
            "description": "The module.",
            "nullable": true,
            "type": "string"
          },
          "new_ver_list": {
            "description": "The new version list.",
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "new_version_state": {
            "description": "The new version state.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "progress": {
            "description": "The progress.",
            "nullable": true,
            "type": "string"
          },
          "sequence_id": {
            "description": "The sequence id.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "status": {
            "description": "The status.",
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "PrintUpload": {
        "additionalProperties": true,
        "description": "The print upload.",
        "properties": {
          "message": {
            "description": "The message.",
            "type": "string"
          },
          "progress": {
            "description": "The progress.",
            "format": "int64",
            "type": "integer"
          },
          "status": {
            "description": "The status.",
            "type": "string"
          }
        },
        "required": [
          "message",
          "progress",
          "status"
        ],
        "type": "object"
      },
      "PushStatus": {
        "additionalProperties": true,
        "description": "A push status message.",
        "properties": {
          "ams": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintAms"
              }
            ],
            "description": "The ams.",
            "nullable": true
          },
          "ams_rfid_status": {
            "description": "The ams rfid status.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ams_status": {
            "description": "The ams status.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "aux_part_fan": {
            "description": "The aux part fan.",
            "nullable": true,
            "type": "boolean"
          },
          "bed_target_temper": {
            "description": "The target bed temperature.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "bed_temper": {
            "description": "The bed temperature.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "big_fan1_speed": {
            "description": "The big fan 1 speed.",
            "nullable": true,
            "type": "string"
          },
          "big_fan2_speed": {
            "description": "The big fan 2 speed.",
            "nullable": true,
            "type": "string"
          },
          "chamber_temper": {
            "description": "The chamber temperature.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "cooling_fan_speed": {
            "description": "The cooling fan speed.",
            "nullable": true,
            "type": "string"
          },
          "fan_gear": {
            "description": "The fan gear.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "force_upgrade": {
            "description": "Force upgrade?",
            "nullable": true,
            "type": "boolean"
          },
          "gcode_file": {
            "description": "The gcode file.",
            "nullable": true,
            "type": "string"
          },
          "gcode_file_prepare_percent": {
            "description": "The gcode file prepare percent.",
            "nullable": true,
            "type": "string"
          },
          "gcode_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GcodeState"
              }
            ],
            "description": "The gcode state.",
            "nullable": true
          },
          "heatbreak_fan_speed": {
            "description": "The heatbreak fan speed.",
            "nullable": true,
            "type": "string"
          },
          "hms": {
            "description": "The hms.",
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "home_flag": {
            "description": "The home flag.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "hw_switch_state": {
            "description": "The hw switch state.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "ipcam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintIpcam"
              }
            ],
            "description": "The ipcam.",
            "nullable": true
          },
          "layer_num": {
            "description": "The layer num.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "lifecycle": {
            "description": "The lifecycle.",
            "nullable": true,
            "type": "string"
          },
          "lights_report": {
            "description": "The lights report.",
            "items": {
              "$ref": "#/components/schemas/PrintLightsReport"
            },
            "nullable": true,
            "type": "array"
          },
          "mc_percent": {
            "description": "The percentage of the print completed.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mc_print_line_number": {
            "description": "The mc print line number.",
            "nullable": true,
            "type": "string"
          },
          "mc_print_stage": {
            "description": "The print stage.",
            "nullable": true,
            "type": "string"
          },
          "mc_print_sub_stage": {
            "description": "The mc print sub stage.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mc_remaining_time": {
            "description": "The remaining time of the print.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "mess_production_state": {
            "description": "The mess production state.",
            "nullable": true,
            "type": "string"
          },
          "msg": {
            "description": "The message.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "nozzle_diameter": {
            "description": "The nozzle diameter.",
            "nullable": true,
            "type": "string"
          },
          "nozzle_target_temper": {
            "description": "The target nozzle temperature.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "nozzle_temper": {
            "description": "The nozzle temperature.",
            "format": "double",
            "nullable": true,
            "type": "number"
          },
          "nozzle_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NozzleType"
              }
            ],
            "description": "The nozzle type.",
            "nullable": true
          },
          "online": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintOnline"
              }
            ],
            "description": "Online status.",
            "nullable": true
          },
          "print_error": {
            "description": "The print error.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "print_type": {
            "description": "The print type.",
            "nullable": true,
            "type": "string"
          },
          "profile_id": {
            "description": "The profile id.",
            "nullable": true,
            "type": "string"
          },
          "project_id": {
            "description": "The project id.",
            "nullable": true,
            "type": "string"
          },
          "queue_est": {
            "description": "The queue est.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "queue_number": {
            "description": "The queue number.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "queue_sts": {
            "description": "The queue sts.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "queue_total": {
            "description": "The queue total.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "s_obj": {
            "description": "The s obj.",
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "sdcard": {
            "description": "Sdcard?",
            "nullable": true,
            "type": "boolean"
          },
          "sequence_id": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SequenceId"
              }
            ],
            "description": "The sequence id."
          },
          "spd_lvl": {
            "description": "The spd lvl.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "spd_mag": {
            "description": "The spd mag.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "stg": {
            "description": "The stg.",
            "items": {},
            "nullable": true,
            "type": "array"
          },
          "stg_cur": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Stage"
              }
            ],
            "description": "The stg cur.",
            "nullable": true
          },
          "subtask_id": {
            "description": "The subtask id.",
            "nullable": true,
            "type": "string"
          },
          "subtask_name": {
            "description": "The subtask name.",
            "nullable": true,
            "type": "string"
          },
          "task_id": {
            "description": "The task id.",
            "nullable": true,
            "type": "string"
          },
          "total_layer_num": {
            "description": "The total layer num.",
            "format": "int64",
            "nullable": true,
            "type": "integer"
          },
          "upgrade_state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintUpgradeState"
              }
            ],
            "description": "The upgrade state.",
            "nullable": true
          },
          "upload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintUpload"
              }
            ],
            "description": "The upload.",
            "nullable": true
          },
          "vt_tray": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PrintTray"
              }
            ],
            "description": "The tray.",
            "nullable": true
          },
          "wifi_signal": {
            "description": "The wifi signal.",
            "nullable": true,
            "type": "string"
          }
        },
        "required": [
          "sequence_id"
        ],
        "type": "object"
      },
      "SequenceId": {
        "anyOf": [
          {
            "description": "A string sequence id.",
            "type": "string"
          },
          {
            "description": "An integer sequence id.",
            "format": "uint32",
            "minimum": 0,
            "type": "integer"
          }
        ],
        "description": "The sequence id type."
      },
      "Stage": {
        "description": "The print stage. These come from: https://github.com/SoftFever/OrcaSlicer/blob/431978baf17961df90f0d01871b0ad1d839d7f5d/src/slic3r/GUI/DeviceManager.cpp#L78",
        "oneOf": [
          {
            "description": "Empty.",
            "enum": [
              "empty"
            ],
            "type": "string"
          },
          {
            "description": "Auto bed leveling.",
            "enum": [
              "auto_bed_leveling"
            ],
            "type": "string"
          },
          {
            "description": "Heatbed preheating.",
            "enum": [
              "heatbed_preheating"
            ],
            "type": "string"
          },
          {
            "description": "Sweeping XY mech mode.",
            "enum": [
              "sweeping_xy_mech_mode"
            ],
            "type": "string"
          },
          {
            "description": "Changing filament.",
            "enum": [
              "changing_filament"
            ],
            "type": "string"
          },
          {
            "description": "M400 pause.",
            "enum": [
              "m400_pause"
            ],
            "type": "string"
          },
          {
            "description": "Paused due to filament runout.",
            "enum": [
              "paused_due_to_filament_runout"
            ],
            "type": "string"
          },
          {
            "description": "Heating hotend.",
            "enum": [
              "heating_hotend"
            ],
            "type": "string"
          },
          {
            "description": "Calibrating extrusion.",
            "enum": [
              "calibrating_extrusion"
            ],
            "type": "string"
          },
          {
            "description": "Scanning bed surface.",
            "enum": [
              "scanning_bed_surface"
            ],
            "type": "string"
          },
          {
            "description": "Inspecting first layer.",
            "enum": [
              "inspecting_first_layer"
            ],
            "type": "string"
          },
          {
            "description": "Identifying build plate type.",
            "enum": [
              "identifying_build_plate_type"
            ],
            "type": "string"
          },
          {
            "description": "Calibrating micro lidar.",
            "enum": [
              "calibrating_micro_lidar"
            ],
            "type": "string"
          },
          {
            "description": "Homing toolhead.",
            "enum": [
              "homing_toolhead"
            ],
            "type": "string"
          },
          {
            "description": "Cleaning nozzle tip.",
            "enum": [
              "cleaning_nozzle_tip"
            ],
            "type": "string"
          },
          {
            "description": "Checking extruder temperature.",
            "enum": [
              "checking_extruder_temperature"
            ],
            "type": "string"
          },
          {
            "description": "Printing was paused by the user.",
            "enum": [
              "printing_was_paused_by_the_user"
            ],
            "type": "string"
          },
          {
            "description": "Pause of front cover falling.",
            "enum": [
              "pause_of_front_cover_falling"
            ],
            "type": "string"
          },
          {
            "description": "Calibrating micro lidar.",
            "enum": [
              "calibrating_micro_lidar2"
            ],
            "type": "string"
          },
          {
            "description": "Calibrating extrusion flow.",
            "enum": [
              "calibrating_extrusion_flow"
            ],
            "type": "string"
          },
          {
            "description": "Paused due to nozzle temperature malfunction.",
            "enum": [
              "paused_due_to_nozzle_temperature_malfunction"
            ],
            "type": "string"
          },
          {
            "description": "Paused due to heat bed temperature malfunction.",
            "enum": [
              "paused_due_to_heat_bed_temperature_malfunction"
            ],
            "type": "string"
          },
          {
            "description": "Filament unloading.",
            "enum": [
              "filament_unloading"
            ],
            "type": "string"
          },
          {
            "description": "Skip step pause.",
            "enum": [
              "skip_step_pause"
            ],
            "type": "string"
          },
          {
            "description": "Filament loading.",
            "enum": [
              "filament_loading"
            ],
            "type": "string"
          },
          {
            "description": "Motor noise calibration.",
            "enum": [
              "motor_noise_calibration"
            ],
            "type": "string"
          },
          {
            "description": "Paused due to AMS lost.",
            "enum": [
              "paused_due_to_ams_lost"
            ],
            "type": "string"
          },
          {
            "description": "Paused due to low speed of the heat break fan.",
            "enum": [
              "paused_due_to_low_speed_of_the_heat_break_fan"
            ],
            "type": "string"
          },
          {
            "description": "Paused due to chamber temperature control error.",
            "enum": [
              "paused_due_to_chamber_temperature_control_error"
            ],
            "type": "string"
          },
          {
            "description": "Cooling chamber.",
            "enum": [
              "cooling_chamber"
            ],
            "type": "string"
          },
          {
            "description": "Paused by the Gcode inserted by the user.",
            "enum": [
              "paused_by_the_gcode_inserted_by_the_user"
            ],
            "type": "string"
          },
          {
            "description": "Motor noise showoff.",
            "enum": [
              "motor_noise_showoff"
            ],
            "type": "string"
          },
          {
            "description": "Nozzle filament covered detected pause.",
            "enum": [
              "nozzle_filament_covered_detected_pause"
            ],
            "type": "string"
          },
          {
            "description": "Cutter error pause.",
            "enum": [
              "cutter_error_pause"
            ],
            "type": "string"
          },
          {
            "description": "First layer error pause.",
            "enum": [
              "first_layer_error_pause"
            ],
            "type": "string"
          },
          {
            "description": "Nozzle clog pause.",
            "enum": [
              "nozzle_clog_pause"
            ],
            "type": "string"
          }
        ]
      },
      "Volume": {
        "description": "Set of three values to represent the extent of a 3-D Volume. This contains the width, depth, and height values, generally used to represent some maximum or minimum.\n\nAll measurements are in millimeters.",
        "properties": {
          "depth": {
            "description": "Depth of the volume (\"front to back\"), in millimeters.",
            "format": "double",
            "type": "number"
          },
          "height": {
            "description": "Height of the volume (\"up and down\"), in millimeters.",
            "format": "double",
            "type": "number"
          },
          "width": {
            "description": "Width of the volume (\"left and right\"), in millimeters.",
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "depth",
          "height",
          "width"
        ],
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "email": "machine-api@zoo.dev",
      "url": "https://zoo.dev"
    },
    "description": "",
    "title": "machine-api",
    "version": "0.1.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/": {
      "get": {
        "operationId": "api_get_schema",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "successful operation"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Return the OpenAPI schema in JSON format.",
        "tags": [
          "meta"
        ]
      }
    },
    "/machines": {
      "get": {
        "operationId": "get_machines",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MachineInfoResponse"
                  },
                  "title": "Array_of_MachineInfoResponse",
                  "type": "array"
                }
              }
            },
            "description": "successful operation"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List available machines and their statuses",
        "tags": [
          "machines"
        ]
      }
    },
    "/machines/{id}": {
      "get": {
        "operationId": "get_machine",
        "parameters": [
          {
            "description": "The machine ID.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineInfoResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Get the status of a specific machine",
        "tags": [
          "machines"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "get_metrics",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "String",
                  "type": "string"
                }
              }
            },
            "description": "successful operation"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "List available machines and their statuses",
        "tags": [
          "hidden"
        ]
      }
    },
    "/ping": {
      "get": {
        "operationId": "ping",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pong"
                }
              }
            },
            "description": "successful operation"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Return pong.",
        "tags": [
          "meta"
        ]
      }
    },
    "/print": {
      "post": {
        "operationId": "print_file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrintJobResponse"
                }
              }
            },
            "description": "successful operation"
          },
          "4XX": {
            "$ref": "#/components/responses/Error"
          },
          "5XX": {
            "$ref": "#/components/responses/Error"
          }
        },
        "summary": "Print a given file. File must be a sliceable 3D model.",
        "tags": [
          "machines"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Hidden API endpoints that should not show up in the docs.",
      "externalDocs": {
        "url": "https://docs.zoo.dev/api/machines"
      },
      "name": "hidden"
    },
    {
      "description": "Utilities for making parts and discovering machines.",
      "externalDocs": {
        "url": "https://docs.zoo.dev/api/machines"
      },
      "name": "machines"
    },
    {
      "description": "Meta information about the API.",
      "externalDocs": {
        "url": "https://docs.zoo.dev/api/meta"
      },
      "name": "meta"
    }
  ]
}